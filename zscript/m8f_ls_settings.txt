//-----------------------------------------------------------------------------
//
// Copyright 2018 mmaulwurff (Alexander Kromm)
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/
//
//-----------------------------------------------------------------------------
//

class m8f_ls_Settings
{

  bool   targetColorChange;
  bool   hideOnSlot1;
  string noTargetColor;
  string targetColor;
  double scale;

  private void read(PlayerInfo player)
  {
    targetColorChange = CVar.GetCVar("m8f_wm_TSChangeLaserColor" , player).GetInt();
    hideOnSlot1       = CVar.GetCVar("m8f_ls_HideOnSlot1"        , player).GetInt();
    noTargetColor     = CVar.GetCVar("m8f_ls_CustomColor"        , player).GetString();
    targetColor       = CVar.GetCVar("m8f_ls_ColorOnTarget"      , player).GetString();
    scale             = CVar.GetCVar("m8f_ls_Scale"              , player).GetFloat();
  }

  m8f_ls_Settings init(PlayerInfo player)
  {
    read(player);
    return self;
  }

  void maybeUpdate(PlayerInfo player)
  {
    int optionsUpdatePeriod = CVar.GetCVar("m8f_ls_UpdatePeriod", player).GetInt();

    if (optionsUpdatePeriod == 0) { read(player); }

    else if (optionsUpdatePeriod != -1
             && (level.time % optionsUpdatePeriod) == 0)
    {
      read(player);
    }

  }

} // class m8f_ls_Settings
